using FuneralClient.Utils.ConsoleUtil;
using FuneralClient.Utils.Exploits;
using FuneralClient.Utils.Extensions;
using FuneralClient.Utils.Other;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using VRC;

namespace FuneralClient.Utils.API
{
    [System.Reflection.Obfuscation(Exclude = false, ApplyToMembers = true, Feature = "+ctrl flow;+rename;+constants;+anti debug;+anti ildasm;+ref proxy;+resources")]
    public static class ExploitAPI
    {
        public static List<Attack> CalledInAttacks = new List<Attack>();

        public static Attack GetAttackById(int ID)
        {
            foreach(var attack in CalledInAttacks)
            {
                if (attack.AttackID == ID)
                {
                    return attack;
                }
            }

            return null;
        }

        public static void CallInAttack(CoffinUser Target, AttackType attackType)
        {
            var attack = new Exploits.Attack(Target, PlayerManager.GetCurrentPlayer().ToCoffin());
            attack.attackType = attackType;
            ExploitAPI.CalledInAttacks.Add(attack);

            ConsoleUtils.Success($"Attack on {Target.Username} has been called in successfully. Attack of Type {attackType.ToString()} will now be executed.");
        }
    }
}
